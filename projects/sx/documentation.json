{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AccordionComponent>",
                "defaultValue": "{\r\n  title: 'Accordion',\r\n  component: AccordionComponent,\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/basic-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicCardComponent>",
                "defaultValue": "{\n  title: 'Basic Card',\n  component: BasicCardComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LabelComponent>",
                "defaultValue": "{\n  title: 'Label',\n  component: LabelComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoaderComponent>",
                "defaultValue": "{\n  title: 'Loader',\n  component: LoaderComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  initialGlobals: {\n    locale: \"pt-BR\",\n    locales: {\n      pt_BR: \"Posrtuguês Brasil\",\n      en_US: \"English\",\n    },\n  },\n\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'Accordion',\r\n  args: {\r\n    title: 'Header text',\r\n    colorTitle: '#000', \r\n    subtitle: 'Subtitle text',\r\n    colorSubtitle: '#000',\r\n    titleB: '',\r\n    colorTitleB: '',\r\n    subtitleB: '',\r\n    colorSubtitleB: '',\r\n    pathIcon: '',\r\n    pathFillIcon: '',\r\n    viewBoxIcon: '',\r\n    sizeTitle: 'normal',\r\n  },\r\n  render: (args: any) => ({    \r\n    template: `\r\n      <sx-accordion\r\n        [title]=\"'${args.title}'\"\r\n        [subtitle]=\"'${args.subtitle}'\"\r\n        colorSubtitle=\"'${args.colorSubtitle}'\"\r\n      >\r\n        <div class=\"col-md-7 col-sm-12\">\r\n          <p class=\"title\">Lorem Ipsum</p>\r\n          <p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...</p>\r\n        </div>\r\n\r\n        <div class=\"col-md-5 col-sm-12\">\r\n          <p class=\"title\">Lorem Ipsum</p>\r\n          <p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...</p>\r\n        </div>\r\n      </sx-accordion>\r\n    `\r\n  })\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/basic-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Basic Card',\n  argTypes: {\n    colorVariation: {\n      description: 'Variação de cor',\n      control: 'radio',\n      options: ['white', 'gray', 'blue', 'blue-notification'],\n      type: 'string',\n      defaultValue: 'white',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'white' },\n      },\n    },\n    padding: {\n      description: 'Espaçamento interno',\n      control: 'radio',\n      options: ['0', 'sm', 'md', 'lg'],\n      type: 'string',\n      defaultValue: 'lg',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'lg' },\n      },\n    },\n    margingBottom: {\n      description: 'Margem inferior',\n      control: 'radio',\n      options: ['0', 'sm', 'md', 'lg', 'default'],\n      type: 'string',\n      defaultValue: 'default',\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'lg' },\n      },\n    },\n    width100: {\n      description: 'Espaçamento completo',\n      control: 'boolean',\n      type: 'boolean',\n      defaultValue: false,\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    basicCardWidth: {\n      description: 'Largura do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n    basicCardHeight: {\n      description: 'Altura do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n    paddingBottom: {\n      description: 'Espaçamento interno inferior do card',\n      control: 'boolean',\n      type: 'boolean',\n      defaultValue: true,\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'true' },\n      },\n    },\n    borderColor: {\n      description: 'Cor da borda do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n  },\n  args: {\n    colorVariation: 'white',\n    padding: 'lg',\n    margingBottom: 'default',\n    radius: 'md',\n    width100: false,\n    basicCardWidth: '',\n    basicCardHeight: '',\n    paddingBottom: true,\n    borderColor: '',\n  },\n\n  render: (args: any) => ({    \n    template: `\n      <sx-basic-card\n        [colorVariation]=\"'${args.colorVariation}'\"\n        [padding]=\"'${args.padding}'\"\n        [margingBottom]=\"'${args.margingBottom}'\"\n        [radius]=\"'${args.radius}'\"\n        [width100]=\"${args.width100}\"\n        [basicCardWidth]=\"'${args.basicCardWidth}'\"\n        [basicCardHeight]=\"'${args.basicCardHeight}'\"\n        [paddingBottom]=\"${args.paddingBottom}\"\n        [borderColor]=\"'${args.borderColor}'\"\n      >\n        Basic Card\n      </sx-basic-card>\n    `\n  })\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Button',\n  argTypes: {\n    type: {\n      description: 'Tipo do botão',\n      control: 'radio',\n      options: ['button', 'submit', 'reset'],\n      type: 'string',\n      defaultValue: 'button',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'button' },\n      },\n    },\n    variation: {\n      description: 'Variação do botão',\n      control: 'radio',\n      options: ['raised', 'stroked', 'ghost'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'raised' },\n      },\n    },\n    color: {\n      description: 'Cor do botão',\n      control: 'radio',\n      options: ['primary', 'warn', 'cancel', 'secondary'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    size: {\n      description: 'Tamanho do botão',\n      control: 'radio',\n      options: ['md', 'large', 'sm'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'md' },\n      },\n    },\n    isLoading: {\n      description: 'Mostra ou não o feedback de \"lendo...\"',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    disabled: {\n      description: 'desabilita / habilita o botão',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    isWithIcon: {\n      description: 'Mostra ou não um ícone',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    hasWidth: {\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'auto' },\n      },\n    },\n    hasPorcentageWidth: {\n      description: 'Atribui um tamanho em porcentagem ao botão',\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'auto' },\n      },\n    },\n    loaderColor: {\n      description: 'Lê a cor que será atribuída ao botão',\n      control: 'radio',\n      options: ['primary', 'secondary'],\n      type: 'string',\n      table: {\n        type: { summary: 'select' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    iconLoaderSize: {\n      description: 'Lê tamanho do icone que será atribuído ao botão',\n      control: 'number',\n      type: 'number',\n      table: {\n        type: { summary: 'number' },\n        defaultValue: { summary: '20' },\n      },\n    },\n  },\n  args: {\n    type: 'button',\n    variation: 'raised',\n    color: 'primary',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n    isWithIcon: false,\n    hasWidth: 'auto',\n    hasPorcentageWidth: 'auto',\n    loaderColor: 'primary',\n    iconLoaderSize: 20\n  },\n  render: (args: any) => ({    \n    template: `<sx-button\n      [type]=\"'${args.type}'\"\n      [variation]=\"'${args.variation}'\"\n      [color]=\"'${args.color}'\"\n      [size]=\"'${args.size}'\"\n      [isLoading]=\"${args.isLoading}\"\n      [disabled]=\"${args.disabled}\"\n      [isWithIcon]=\"${args.isWithIcon}\"\n      [hasWidth]=\"'${args.hasWidth}'\"\n      [hasPorcentageWidth]=\"'${args.hasPorcentageWidth}'\"\n      [loaderColor]=\"'${args.loaderColor}'\">\n        Button\n      </sx-button>`\n  })\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Label',\n  args: {\n    type: 'content',\n    color: 'default',\n    for: '',\n    size: 'default',\n    isPDF: false,\n    weight: ''\n  },\n  render: (args: any) => ({    \n    template: `\n      <sx-label [size]=\"'small'\" [color]=\"'default'\" [type]=\"'title'\">\n        Label text\n      </sx-label>\n    `\n  })\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/sx/src/stories/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Loader',\n  argTypes: {\n    color: {\n      description: 'Cor do loader',\n      control: 'radio',\n      options: ['primary', 'secondary', 'support'],\n      type: 'string',\n      defaultValue: 'primary',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    text: {\n      description: 'Texto do loader',\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    size: {\n      description: 'Tamanho do loader',\n      control: 'number',\n      type: 'number',\n      table: {\n        type: { summary: 'number' },\n        defaultValue: { summary: '20' },\n      },\n    },\n  },\n  args: {\n    color: 'primary',\n    text: '',\n    size: 20,\n  },\n  render: (args: any) => ({    \n    template: `<sx-loader [color]=\"'${args.color}'\" [text]=\"'${args.text}'\" [size]=\"'${args.size}'\"></sx-loader>`\n  })\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AccordionComponent>",
                "file": "projects/sx/src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicCardComponent>",
                "file": "projects/sx/src/stories/basic-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/sx/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LabelComponent>",
                "file": "projects/sx/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoaderComponent>",
                "file": "projects/sx/src/stories/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/sx/src/stories/accordion.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AccordionComponent>",
                    "defaultValue": "{\r\n  title: 'Accordion',\r\n  component: AccordionComponent,\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'Accordion',\r\n  args: {\r\n    title: 'Header text',\r\n    colorTitle: '#000', \r\n    subtitle: 'Subtitle text',\r\n    colorSubtitle: '#000',\r\n    titleB: '',\r\n    colorTitleB: '',\r\n    subtitleB: '',\r\n    colorSubtitleB: '',\r\n    pathIcon: '',\r\n    pathFillIcon: '',\r\n    viewBoxIcon: '',\r\n    sizeTitle: 'normal',\r\n  },\r\n  render: (args: any) => ({    \r\n    template: `\r\n      <sx-accordion\r\n        [title]=\"'${args.title}'\"\r\n        [subtitle]=\"'${args.subtitle}'\"\r\n        colorSubtitle=\"'${args.colorSubtitle}'\"\r\n      >\r\n        <div class=\"col-md-7 col-sm-12\">\r\n          <p class=\"title\">Lorem Ipsum</p>\r\n          <p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...</p>\r\n        </div>\r\n\r\n        <div class=\"col-md-5 col-sm-12\">\r\n          <p class=\"title\">Lorem Ipsum</p>\r\n          <p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...</p>\r\n        </div>\r\n      </sx-accordion>\r\n    `\r\n  })\r\n}"
                }
            ],
            "projects/sx/src/stories/basic-card.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/basic-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicCardComponent>",
                    "defaultValue": "{\n  title: 'Basic Card',\n  component: BasicCardComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/basic-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Basic Card',\n  argTypes: {\n    colorVariation: {\n      description: 'Variação de cor',\n      control: 'radio',\n      options: ['white', 'gray', 'blue', 'blue-notification'],\n      type: 'string',\n      defaultValue: 'white',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'white' },\n      },\n    },\n    padding: {\n      description: 'Espaçamento interno',\n      control: 'radio',\n      options: ['0', 'sm', 'md', 'lg'],\n      type: 'string',\n      defaultValue: 'lg',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'lg' },\n      },\n    },\n    margingBottom: {\n      description: 'Margem inferior',\n      control: 'radio',\n      options: ['0', 'sm', 'md', 'lg', 'default'],\n      type: 'string',\n      defaultValue: 'default',\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'lg' },\n      },\n    },\n    width100: {\n      description: 'Espaçamento completo',\n      control: 'boolean',\n      type: 'boolean',\n      defaultValue: false,\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    basicCardWidth: {\n      description: 'Largura do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n    basicCardHeight: {\n      description: 'Altura do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n    paddingBottom: {\n      description: 'Espaçamento interno inferior do card',\n      control: 'boolean',\n      type: 'boolean',\n      defaultValue: true,\n      table: {\n        type: { summary: 'default' },\n        defaultValue: { summary: 'true' },\n      },\n    },\n    borderColor: {\n      description: 'Cor da borda do card',\n      control: 'text',\n      type: 'string',\n      defaultValue: false,\n    },\n  },\n  args: {\n    colorVariation: 'white',\n    padding: 'lg',\n    margingBottom: 'default',\n    radius: 'md',\n    width100: false,\n    basicCardWidth: '',\n    basicCardHeight: '',\n    paddingBottom: true,\n    borderColor: '',\n  },\n\n  render: (args: any) => ({    \n    template: `\n      <sx-basic-card\n        [colorVariation]=\"'${args.colorVariation}'\"\n        [padding]=\"'${args.padding}'\"\n        [margingBottom]=\"'${args.margingBottom}'\"\n        [radius]=\"'${args.radius}'\"\n        [width100]=\"${args.width100}\"\n        [basicCardWidth]=\"'${args.basicCardWidth}'\"\n        [basicCardHeight]=\"'${args.basicCardHeight}'\"\n        [paddingBottom]=\"${args.paddingBottom}\"\n        [borderColor]=\"'${args.borderColor}'\"\n      >\n        Basic Card\n      </sx-basic-card>\n    `\n  })\n}"
                }
            ],
            "projects/sx/src/stories/button.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Button',\n  argTypes: {\n    type: {\n      description: 'Tipo do botão',\n      control: 'radio',\n      options: ['button', 'submit', 'reset'],\n      type: 'string',\n      defaultValue: 'button',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'button' },\n      },\n    },\n    variation: {\n      description: 'Variação do botão',\n      control: 'radio',\n      options: ['raised', 'stroked', 'ghost'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'raised' },\n      },\n    },\n    color: {\n      description: 'Cor do botão',\n      control: 'radio',\n      options: ['primary', 'warn', 'cancel', 'secondary'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    size: {\n      description: 'Tamanho do botão',\n      control: 'radio',\n      options: ['md', 'large', 'sm'],\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'md' },\n      },\n    },\n    isLoading: {\n      description: 'Mostra ou não o feedback de \"lendo...\"',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    disabled: {\n      description: 'desabilita / habilita o botão',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    isWithIcon: {\n      description: 'Mostra ou não um ícone',\n      control: 'boolean',\n      type: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    hasWidth: {\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'auto' },\n      },\n    },\n    hasPorcentageWidth: {\n      description: 'Atribui um tamanho em porcentagem ao botão',\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'auto' },\n      },\n    },\n    loaderColor: {\n      description: 'Lê a cor que será atribuída ao botão',\n      control: 'radio',\n      options: ['primary', 'secondary'],\n      type: 'string',\n      table: {\n        type: { summary: 'select' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    iconLoaderSize: {\n      description: 'Lê tamanho do icone que será atribuído ao botão',\n      control: 'number',\n      type: 'number',\n      table: {\n        type: { summary: 'number' },\n        defaultValue: { summary: '20' },\n      },\n    },\n  },\n  args: {\n    type: 'button',\n    variation: 'raised',\n    color: 'primary',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n    isWithIcon: false,\n    hasWidth: 'auto',\n    hasPorcentageWidth: 'auto',\n    loaderColor: 'primary',\n    iconLoaderSize: 20\n  },\n  render: (args: any) => ({    \n    template: `<sx-button\n      [type]=\"'${args.type}'\"\n      [variation]=\"'${args.variation}'\"\n      [color]=\"'${args.color}'\"\n      [size]=\"'${args.size}'\"\n      [isLoading]=\"${args.isLoading}\"\n      [disabled]=\"${args.disabled}\"\n      [isWithIcon]=\"${args.isWithIcon}\"\n      [hasWidth]=\"'${args.hasWidth}'\"\n      [hasPorcentageWidth]=\"'${args.hasPorcentageWidth}'\"\n      [loaderColor]=\"'${args.loaderColor}'\">\n        Button\n      </sx-button>`\n  })\n}"
                }
            ],
            "projects/sx/src/stories/label.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LabelComponent>",
                    "defaultValue": "{\n  title: 'Label',\n  component: LabelComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Label',\n  args: {\n    type: 'content',\n    color: 'default',\n    for: '',\n    size: 'default',\n    isPDF: false,\n    weight: ''\n  },\n  render: (args: any) => ({    \n    template: `\n      <sx-label [size]=\"'small'\" [color]=\"'default'\" [type]=\"'title'\">\n        Label text\n      </sx-label>\n    `\n  })\n}"
                }
            ],
            "projects/sx/src/stories/loader.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoaderComponent>",
                    "defaultValue": "{\n  title: 'Loader',\n  component: LoaderComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/src/stories/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Loader',\n  argTypes: {\n    color: {\n      description: 'Cor do loader',\n      control: 'radio',\n      options: ['primary', 'secondary', 'support'],\n      type: 'string',\n      defaultValue: 'primary',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    text: {\n      description: 'Texto do loader',\n      control: 'text',\n      type: 'string',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    size: {\n      description: 'Tamanho do loader',\n      control: 'number',\n      type: 'number',\n      table: {\n        type: { summary: 'number' },\n        defaultValue: { summary: '20' },\n      },\n    },\n  },\n  args: {\n    color: 'primary',\n    text: '',\n    size: 20,\n  },\n  render: (args: any) => ({    \n    template: `<sx-loader [color]=\"'${args.color}'\" [text]=\"'${args.text}'\" [size]=\"'${args.size}'\"></sx-loader>`\n  })\n}"
                }
            ],
            "projects/sx/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/sx/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  initialGlobals: {\n    locale: \"pt-BR\",\n    locales: {\n      pt_BR: \"Posrtuguês Brasil\",\n      en_US: \"English\",\n    },\n  },\n\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/sx/src/stories/accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AccordionComponent>",
                    "file": "projects/sx/src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/sx/src/stories/basic-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicCardComponent>",
                    "file": "projects/sx/src/stories/basic-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/sx/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/sx/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/sx/src/stories/label.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LabelComponent>",
                    "file": "projects/sx/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/sx/src/stories/loader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoaderComponent>",
                    "file": "projects/sx/src/stories/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/sx/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/accordion.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/basic-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/basic-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/basic-card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/label.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/sx/src/stories/loader.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}